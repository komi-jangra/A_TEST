#ifndef _CFG_STUB_SW_UPGRADE_HANDLER_H_
#define _CFG_STUB_SW_UPGRADE_HANDLER_H_

#define CFG_RESET    0xffff
#define ENT_OAMS_CFGSTUB 0x8888 /* some number */
I_S32 cfgStubSendCmMessage(  void *buff,I_U32 size,I_U32 MessageType );
I_S32 cfgStubSendMessage(void *bufPtr, I_U32 size, I_S32 SrcEntId,I_U16 msgType, I_U8 subType);
void cfgPopulateSwMOfferTable(I_U32 nodeType, I_S8 *swVersion);
void cfgPopulateSwMTable(I_U32 nodeType,I_S8 *swVersion,I_U8 count,I_U8 delInPr);
void cfgPopulateSwMNodeTable(I_U32 nodeType,I_U32 nodeId,I_U32 e1Id,I_S8 *swVerAc,I_S8 *swVerInAc,I_S8 *swVerDnld,I_S8 *swVerNew,I_U32 swAction,I_U32 swStatus);
void cfgUpdateSwMNodeTable(I_U32 nodeType,I_U32 nodeId,I_U32 e1Id,I_S8 *swVerAc,I_S8 *swVerInAc,I_S8 *swVerDnld,I_S8 *swVerNew,I_U32 swAction,I_U32 swStatus);
void cfgDeleteSwMTable(I_U32 nodeType,I_S8 *swVersion);
void cfgDeleteSwMNodeTable(I_U32 nodeType,I_U32 nodeId);
void cfgPopulateHoCtrlTable(I_U32 cellId,I_U32 lac);
void cfgPopulateCellPerTable(I_U32 cellId,I_U32 lac,I_U32 adState);
void cfgPopulateCellNonPerTable(I_U32 cellId,I_U32 lac,I_U32 oprState);
void cfgDelCellPerTable(I_U32 cellId,I_U32 lac);
void cfgDelCellNonPerTable(I_U32 cellId,I_U32 lac);
void addCellPerTable();
void cfgDeleteCellPerTable();
void cfgPopulateCsPwrCtrlTable(I_U32 cellId,I_U32 lac,I_U8 lRxLevUlP,I_U8 lRxLevDlP,I_U8 lRxQualUlP,I_U8 lRxQualDlP);
void cfgDeleteCsPwrCtrlTable(I_U32 cellId,I_U32 lac);
void cfgPopulateTrauConfigTable();
void cfgPopulateLaTable(I_U32 lac);
void CfgTrauHndlr1();
void CfgTrauHndlr2();
void CfgTrauHndlr3();
void CfgTrauHndlr4();
void CfgTrauHndlr5();
void CfgTrauHndlr6();
void CfgSwUpgradeInit2();
void CfgSwUpgradeInit3();
void CfgSwUpgradeInit4();
void CfgSwUpgradeInit5();
void CfgSwUpgradeHndlr1();
void CfgSwUpgradeHndlr2();
void CfgSwUpgradeHndlr3();
void CfgSwUpgradeHndlr4();
void CfgSwUpgradeHndlr5();
void CfgSwUpgradeHndlr6();
void CfgSwUpgradeHndlr7();
void CfgSwUpgradeHndlr8();
void CfgSwUpgradeHndlr9();
void CfgSwUpgradeHndlr10();
void CfgSwUpgradeHndlr11();
void CfgSwUpgradeHndlr12();
void CfgSwUpgradeHndlr13();
void CfgSwUpgradeHndlr14();
void CfgSwUpgradeHndlr15();
void CfgSwUpgradeHndlr16();
void CfgSwUpgradeHndlr17();
void CfgSwUpgradeHndlr18();
void CfgSwUpgradeHndlr19();
void CfgSwUpgradeHndlr20();
void CfgSwUpgradeHndlr21();
void CfgSwUpgradeHndlr22();
void CfgSwUpgradeHndlr23();
void CfgSwUpgradeHndlr24();
void CfgSwUpgradeHndlr25();
void CfgSwUpgradeHndlr26();
void CfgSwUpgradeHndlr27();
void CfgSwUpgradeHndlr28();
void CfgSwUpgradeHndlr29();
void CfgSwUpgradeHndlr30();
void CfgSwUpgradeHndlr31();
void CfgSwUpgradeHndlr32();
void CfgSwUpgradeHndlr33();
void CfgSwUpgradeHndlr34();
void CfgSwUpgradeHndlr35();
void CfgSwUpgradeHndlr36();
void CfgSwUpgradeHndlr37();
void CfgSwUpgradeHndlr38();
void CfgSwUpgradeHndlr39();
void CfgSwUpgradeHndlr40();
void CfgSwUpgradeHndlr41();
void CfgSwUpgradeHndlr42();
void CfgSwUpgradeHndlr43();
void CfgSwUpgradeHndlr44();
void CfgSwUpgradeHndlr45();
void CfgSwUpgradeHndlr46();
void CfgSwUpgradeHndlr47();
void CfgSwUpgradeHndlr48();
void CfgSwUpgradeHndlr49();
void CfgSwUpgradeHndlr50();
void CfgSwUpgradeHndlr51();
void CfgSwUpgradeHndlr52();
void CfgSwUpgradeHndlr53();
void CfgSwUpgradeHndlr54();
void CfgSwUpgradeHndlr55();
void CfgSwUpgradeHndlr56();
void CfgSwUpgradeHndlr57();
void CfgSwUpgradeHndlr58();
void CfgSwUpgradeHndlr59();
void CfgSwUpgradeHndlr60();
void CfgSwUpgradeHndlr61();
void CfgSwUpgradeHndlr62();
void CfgSwUpgradeHndlr63();
void CfgSwUpgradeHndlr64();
void CfgSwUpgradeHndlr65();
void CfgSwUpgradeHndlr65();
void CfgSwUpgradeHndlr66();
void CfgSwUpgradeHndlr67();
void CfgSwUpgradeHndlr68();
void CfgSwUpgradeHndlr69();
void CfgSwUpgradeHndlr70();
void CfgSwUpgradeHndlr71();
void CfgSwUpgradeHndlr72();
void CfgSwUpgradeHndlr73();
void CfgSwUpgradeHndlr74();
void CfgSwUpgradeHndlr75();
void CfgSwUpgradeHndlr76();
void CfgSwUpgradeHndlr77();
void CfgSwUpgradeHndlr78();
void CfgSwUpgradeHndlr79();
void CfgSwUpgradeHndlr80();
void CfgSwUpgradeHndlr81();
void CfgSwUpgradeHndlr82();
void CfgSwUpgradeHndlr83();
void CfgSwUpgradeHndlr84();
void CfgSwUpgradeHndlr85();
void CfgSwUpgradeHndlr86();
void CfgSwUpgradeHndlr87();
void CfgSwUpgradeHndlr88();
void CfgSwUpgradeHndlr89();
void CfgSwUpgradeHndlr90();
void CfgSwUpgradeHndlr91();
void CfgSwUpgradeHndlr92();
void CfgSwUpgradeHndlr93();
void CfgSwUpgradeHndlr94();
void CfgSwUpgradeHndlr95();
void CfgSwUpgradeHndlr96();
void CfgSwUpgradeHndlr97();
void CfgSwUpgradeHndlr98();
void CfgHandOverHndlr1();
void CfgHandOverHndlr2();
void CfgHandOverHndlr3();
void CfgHandOverHndlr4();
void CfgHandOverHndlr5();
void CfgHandOverHndlr6();
void CfgHandOverHndlr7();
void CfgHandOverHndlr8();
void CfgHandOverHndlr9();
void CfgHandOverHndlr10();
void CfgHandOverHndlr11();
void CfgHandOverHndlr12();
void CfgHandOverHndlr13();
void CfgHandOverHndlr14();
void CfgHandOverHndlr15();
void CfgHandOverHndlr16();
void CfgHandOverHndlr17();
void CfgHandOverHndlr18();
void CfgHandOverHndlr19();
void CfgHandOverHndlr20();
void CfgHandOverHndlr21();
void CfgHandOverHndlr22();
void CfgHandOverHndlr23();
void CfgHandOverHndlr24();
void CfgHandOverHndlr25();
void CfgHandOverHndlr26();
void CfgHandOverHndlr27();
void CfgHandOverHndlr28();
void CfgHandOverHndlr29();
void CfgHandOverHndlr30();
void CfgHandOverHndlr31();
void CfgHandOverHndlr32();


#endif
